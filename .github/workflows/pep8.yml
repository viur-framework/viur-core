name: Python

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    strategy:
      matrix:
        python: [ "3.10" ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: viur

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          cd viur
          python -m pip install -U pip
          if [ -f tests/requirements.txt ]; then python -m pip install -r tests/requirements.txt; fi
          python -m pip install -U pycodestyle

      - name: Install pipenv
        run: |
         python -m pip install --upgrade pipenv wheel
      
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run pep8check
        run: |
          pipenv run pep8check
          
